{"version":3,"sources":["preload.coffee","scripts.js","routes.coffee","app_controller_index.coffee","app_controller_project.coffee","app_factory_$helpers.coffee","app_factory_$req.coffee","app_glitchfx.coffee","app_plugin_responsive_class.coffee"],"names":["window","_j49","angular","module","config","$interpolateProvider","$animateProvider","$httpProvider","LightboxProvider","localStorageServiceProvider","cfpLoadingBarProvider","startSymbol","endSymbol","getImageUrl","image","sizes","url","getImageCaption","caption","calculateModalDimensions","dimensions","width","Math","max","imageDisplayWidth","windowWidth","height","templateUrl","setPrefix","classNameFilter","defaults","headers","common","includeSpinner","run","$rootScope","$state","$stateParams","$log","$timeout","$on","$","addClass","loading","debug","removeClass","started","completed","element","document","ready","bootstrap","_glitch","GlitchFX","tooltip","container","popover","$stateProvider","$urlRouterProvider","$path","location","origin","pathname","otherwise","state","controller","views","projects","abstract","template","parent","$scope","view","productId","$window","_r","_route","checkingState","log","goToProjects","$http","$req","$helpers","localStorageService","project","condition","status","getAllDefaultStatus","getAllTimeout","getAllNextPageDelayTime","checking","info","switches","current","currentState","name","gettingAll","pushToProjects","data","forEach","val","key","push","get","id","replace","success","successData","prjct","statusWhenGettingAll","v","remove","getAll","pageNumber","$broadcast","page","statusWhenGetAll","_paginate","error","set","current_page","Boolean","next_page_url","is","err","errorData","statusWhenError","message","then","thenData","loadingFirstTime","errData","factory","_h","errorMessage","getAllDefaultTimeout","nextPage","statusWhenSuccess","statusWhenNoMoreNextPage","statusWhenComplete","method","isObject","params","_post","_delete","_patch","_put","post","_get","src","this","img","Image","canvas","getElementById","context","getContext","onload","_this","glitching","offset","w","h","glitchInterval","prototype","resize","clearInterval","setInterval","clear","drawImage","setTimeout","glitchImg","randInt","a","b","i","spliceHeight","spliceWidth","x","y","random","rect","fill","current_width","jQuery"],"mappings":"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","file":"scripts.min.js","sourcesContent":["window._j49 = angular.module 'J46', [\r\n  'ui.bootstrap'\r\n  'ngAnimate'\r\n  'ui.router'\r\n  'bootstrapLightbox'\r\n  'LocalStorageModule'\r\n  'ngMessages'\r\n  'uiGmapgoogle-maps'\r\n  'wu.masonry'\r\n  ]\r\n\r\nwindow._j49.config ($interpolateProvider, $animateProvider, $httpProvider, LightboxProvider, localStorageServiceProvider, cfpLoadingBarProvider)->\r\n\r\n  $interpolateProvider.startSymbol '{#'\r\n  $interpolateProvider.endSymbol '#}'\r\n\r\n  LightboxProvider.getImageUrl = ( image )->\r\n    image.sizes[0].url\r\n\r\n  LightboxProvider.getImageCaption = ( image )->\r\n    image.caption\r\n\r\n  LightboxProvider.calculateModalDimensions = ( dimensions )->\r\n    width = Math.max 400, dimensions.imageDisplayWidth - 8\r\n\r\n    if width >= dimensions.windowWidth - 20 or dimensions.windowWidth < 768\r\n        width = 'auto'\r\n    {\r\n        'width': width\r\n        'height': 'auto'\r\n    }\r\n\r\n  LightboxProvider.templateUrl = 'views/lightbox.html'\r\n\r\n  localStorageServiceProvider.setPrefix( 'jag' )\r\n\r\n  $animateProvider.classNameFilter /carousel|animate/\r\n\r\n  $httpProvider.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\"\r\n\r\n  cfpLoadingBarProvider.includeSpinner = false\r\n\r\n  return\r\n\r\nwindow._j49.run ($rootScope, $state, $stateParams, $log, $timeout)->\r\n\r\n  $rootScope.$state = $state\r\n  $rootScope.$stateParams = $stateParams\r\n\r\n  $rootScope.$on 'errorOccured', ->\r\n    $('body').addClass 'error-occured'\r\n\r\n    return\r\n\r\n  $rootScope.$on 'cfpLoadingBar:loading', (loading)->\r\n    $log.debug 'cfpLoadingBar:loading', loading\r\n    $('body').removeClass 'error-occured'\r\n\r\n    return\r\n\r\n  $rootScope.$on 'cfpLoadingBar:started', (started)->\r\n    $log.debug 'cfpLoadingBar:started', started\r\n    $('body').removeClass 'error-occured'\r\n\r\n    return\r\n\r\n  $rootScope.$on 'cfpLoadingBar:completed', (completed)->\r\n    $log.debug 'cfpLoadingBar:completed', completed\r\n\r\n    return\r\n\r\n\r\n  return\r\n\r\nangular.element(document).ready ->\r\n  angular.bootstrap(document, ['J46'])\r\n\r\n  window._glitch = new GlitchFX('glitch_canvas', '/images/logo.png')\r\n\r\n  $( '[data-toggle=\"tooltip\"]' ).tooltip(\r\n    container: 'body'\r\n  )\r\n\r\n  $( '[data-toggle=\"popover\"]' ).popover()\r\n\r\n  return","window._j49 = angular.module('J46', ['ui.bootstrap', 'ngAnimate', 'ui.router', 'bootstrapLightbox', 'LocalStorageModule', 'ngMessages', 'uiGmapgoogle-maps', 'wu.masonry']);\n\nwindow._j49.config(function($interpolateProvider, $animateProvider, $httpProvider, LightboxProvider, localStorageServiceProvider, cfpLoadingBarProvider) {\n  $interpolateProvider.startSymbol('{#');\n  $interpolateProvider.endSymbol('#}');\n  LightboxProvider.getImageUrl = function(image) {\n    return image.sizes[0].url;\n  };\n  LightboxProvider.getImageCaption = function(image) {\n    return image.caption;\n  };\n  LightboxProvider.calculateModalDimensions = function(dimensions) {\n    var width;\n    width = Math.max(400, dimensions.imageDisplayWidth - 8);\n    if (width >= dimensions.windowWidth - 20 || dimensions.windowWidth < 768) {\n      width = 'auto';\n    }\n    return {\n      'width': width,\n      'height': 'auto'\n    };\n  };\n  LightboxProvider.templateUrl = 'views/lightbox.html';\n  localStorageServiceProvider.setPrefix('jag');\n  $animateProvider.classNameFilter(/carousel|animate/);\n  $httpProvider.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\n  cfpLoadingBarProvider.includeSpinner = false;\n});\n\nwindow._j49.run(function($rootScope, $state, $stateParams, $log, $timeout) {\n  $rootScope.$state = $state;\n  $rootScope.$stateParams = $stateParams;\n  $rootScope.$on('errorOccured', function() {\n    $('body').addClass('error-occured');\n  });\n  $rootScope.$on('cfpLoadingBar:loading', function(loading) {\n    $log.debug('cfpLoadingBar:loading', loading);\n    $('body').removeClass('error-occured');\n  });\n  $rootScope.$on('cfpLoadingBar:started', function(started) {\n    $log.debug('cfpLoadingBar:started', started);\n    $('body').removeClass('error-occured');\n  });\n  $rootScope.$on('cfpLoadingBar:completed', function(completed) {\n    $log.debug('cfpLoadingBar:completed', completed);\n  });\n});\n\nangular.element(document).ready(function() {\n  angular.bootstrap(document, ['J46']);\n  window._glitch = new GlitchFX('glitch_canvas', '/images/logo.png');\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body'\n  });\n  $('[data-toggle=\"popover\"]').popover();\n});\n\nwindow._j49.config(function($stateProvider, $urlRouterProvider) {\n  var $path;\n  $path = window.location.origin + window.location.pathname;\n  $urlRouterProvider.otherwise('/');\n  $stateProvider.state('index', {\n    url: '/',\n    controller: 'IndexController',\n    views: {\n      'projects': {\n        templateUrl: $path + '/views/index.html',\n        controller: 'ProjectController'\n      }\n    }\n  }).state('project', {\n    abstract: true,\n    url: '/project',\n    controller: 'ProjectController',\n    template: '<ui-view class=\"projects index-projects animate\" />'\n  }).state('project.view', {\n    parent: 'project',\n    url: '/:productId',\n    templateUrl: $path + '/views/project_view.html',\n    controller: function($scope, $stateParams) {\n      $scope.view($stateParams.productId);\n    }\n  });\n});\n\n_j49.controller('IndexController', function($scope, $state, $stateParams, $rootScope, $window, $log) {\n  var _r;\n  _r = $window._route;\n  $scope.checkingState = function() {\n    $log.log('Checking $state...', $state);\n    $log.log('Checking location...', $window.location);\n    $log.log('Checking $stateParams', $stateParams);\n  };\n  $scope.goToProjects = function() {};\n  $scope.checkingState();\n});\n\n_j49.controller('ProjectController', function($scope, $http, $window, $log, $state, $stateParams, $req, $helpers, localStorageService, $timeout, $rootScope) {\n  var _r;\n  $scope.project = {};\n  $scope.projects = [];\n  $scope.condition = {};\n  _r = $window._route;\n  $scope.status = $helpers.getAllDefaultStatus();\n  $scope.getAllTimeout = null;\n  $scope.getAllNextPageDelayTime = 2000;\n  $scope.checking = function() {\n    $log.info('Checking $state', $state);\n    $scope.switches($state.current);\n  };\n  $scope.switches = function(currentState) {\n    switch (currentState.name) {\n      case 'index':\n        $scope.gettingAll();\n        return;\n      default:\n        return;\n    }\n  };\n  $scope.pushToProjects = function(data) {\n    angular.forEach(data, function(val, key) {\n      $scope.projects.push(val);\n    });\n  };\n  $scope.get = function(id) {\n    var url;\n    url = _r['project.show'].replace('{project}', id);\n    $http.get(url).success(function(successData) {\n      $scope.project = successData;\n      $log.log(successData);\n    });\n  };\n  $scope.gettingAll = function() {\n    var prjct;\n    $scope.projects = [];\n    $scope.status = $helpers.statusWhenGettingAll();\n    prjct = ['project_page', 'project_paginate_done', 'project_paginate_interrupted'];\n    angular.forEach(prjct, function(v) {\n      localStorageService.remove(v);\n    });\n    $timeout(function() {\n      $scope.getAll(1);\n    }, 1500);\n  };\n  $scope.getAll = function(pageNumber) {\n    var url;\n    url = _r['project.index'];\n    $rootScope.$broadcast('projects:all', {\n      page: pageNumber\n    });\n    $scope.status = $helpers.statusWhenGetAll();\n    $req._paginate(pageNumber, url).success(function(successData) {\n      $log.log('ProjectController@getAll', successData);\n      $rootScope.$broadcast('projects:all:success');\n      $scope.status.error = false;\n      localStorageService.set('project_page', successData.success.data.current_page);\n      if (Boolean(successData.success.data.next_page_url)) {\n        if ($state.is('index')) {\n          $scope.getAllTimeout = $timeout(function() {\n            $scope.getAll(successData.success.data.current_page + 1);\n          }, $scope.getAllNextPageDelayTime);\n        } else {\n          localStorageService.set('project_paginate_interrupted', true);\n        }\n      } else {\n        $rootScope.$broadcast('projects:all:complete');\n        $scope.status.loading = false;\n        localStorageService.set('project_paginate_done', true);\n      }\n    }).error(function(err) {\n      $log.error('ProjectController@getAll::error', errorData);\n      $rootScope.$broadcast('projects:all:error');\n      $rootScope.$broadcast('errorOccured');\n      $scope.status = $helpers.statusWhenError(errorData.error.message);\n    }).then(function(thenData) {\n      $scope.pushToProjects(thenData.data.success.data.data);\n      $scope.status.loadingFirstTime = false;\n    });\n  };\n  $scope.view = function(productId) {\n    var url;\n    url = _r['project.show'].replace('{project}', productId);\n    $http.get(url).success(function(successData) {\n      $log.log(successData);\n      $scope.project = successData.success.data;\n    }).error(function(err) {\n      $log.error(errData);\n    });\n  };\n  $scope.checking();\n});\n\n_j49.factory('$helpers', function($rootScope) {\n  var _h;\n  _h = {};\n  _h.getAllDefaultStatus = function() {\n    return {\n      loading: false,\n      error: false,\n      errorMessage: null,\n      loadingFirstTime: false\n    };\n  };\n  _h.getAllDefaultTimeout = function() {\n    return {\n      gettingAll: null,\n      nextPage: 3000\n    };\n  };\n  _h.statusWhenGettingAll = function() {\n    return {\n      loadingFirstTime: true,\n      error: false\n    };\n  };\n  _h.statusWhenGetAll = function() {\n    return {\n      loading: true,\n      error: false\n    };\n  };\n  _h.statusWhenSuccess = function() {\n    return {\n      error: false\n    };\n  };\n  _h.statusWhenNoMoreNextPage = function() {\n    return {\n      loading: false\n    };\n  };\n  _h.statusWhenError = function(errorMessage) {\n    return {\n      error: true,\n      loading: false,\n      errorMessage: errorMessage\n    };\n  };\n  _h.statusWhenComplete = function() {\n    return {\n      loadingFirstTime: false\n    };\n  };\n  return _h;\n});\n\n_j49.factory('$req', function($http) {\n  var _r;\n  _r = {};\n  _r._paginate = function(pageNumber, url, method) {\n    if (angular.isObject(pageNumber)) {\n      url = pageNumber.url;\n      pageNumber = pageNumber.page;\n      method = pageNumber.method;\n    }\n    return $http({\n      url: url,\n      method: method ? method : 'GET',\n      params: {\n        page: pageNumber\n      }\n    });\n  };\n  _r._post = function(url, data, params, method) {\n    if (angular.isObject(url)) {\n      url = url.url;\n      data = url.data;\n      params = url.params;\n      method = url.method;\n    }\n    return $http({\n      url: url,\n      data: data,\n      params: params,\n      method: method ? method : 'POST'\n    });\n  };\n  _r._delete = function(url, data, params) {\n    if (angular.isObject(url)) {\n      url = url.url;\n      data = url.data;\n      params = url.params;\n    }\n    return _r._post(url, data, params, 'DELETE');\n  };\n  _r._patch = function(url, data, params) {\n    if (angular.isObject(url)) {\n      url = url.url;\n      data = url.data;\n      params = url.params;\n    }\n    return _r._post(url, data, params, 'PATCH');\n  };\n  _r._put = function(url, data, params) {\n    if (angular.isObject(url)) {\n      url = url.url;\n      data = url.data;\n      params = url.params;\n    }\n    return _r.post(url, data, params, 'PUT');\n  };\n  _r._get = function(url, params) {\n    if (angular.isObject(url)) {\n      url = url.url;\n      params = url.params;\n    }\n    return $http({\n      url: url,\n      params: params,\n      method: 'GET'\n    });\n  };\n  return _r;\n});\n\nvar GlitchFX;\n\nGlitchFX = (function() {\n  'use strict';\n  GlitchFX.canvas;\n\n  GlitchFX.context;\n\n  GlitchFX.img;\n\n  GlitchFX.offset = void 0;\n\n  GlitchFX.w = void 0;\n\n  GlitchFX.h = void 0;\n\n  GlitchFX.glitchInterval = void 0;\n\n  function GlitchFX(id, src) {\n    id = id ? id : 'glitch_canvas';\n    src = src ? src : '/images/logo.png';\n    this.img = new Image;\n    this.img.src = src;\n    this.canvas = document.getElementById(id);\n    this.context = this.canvas.getContext('2d');\n    this.img.onload = (function(_this) {\n      return function() {\n        _this.glitching();\n      };\n    })(this);\n    return;\n  }\n\n  GlitchFX.prototype.glitching = function() {\n    this.canvas.width = this.w = $(window).width();\n    this.offset = this.w * .1;\n    this.canvas.height = this.h = ~~(175 * (this.w - (this.offset * 2)) / this.img.width);\n    $(window).resize((function(_this) {\n      return function() {\n        _this.canvas.width = _this.w = $(window).width();\n        _this.offset = _this.w * .1;\n        _this.canvas.height = _this.h = ~~(175 * (_this.w - (_this.offset * 2)) / _this.img.width);\n      };\n    })(this));\n    clearInterval(this.glitchInterval);\n    this.glitchInterval = setInterval((function(_this) {\n      return function() {\n        _this.clear();\n        _this.context.drawImage(_this.img, 0, 110, _this.img.width, 175, _this.offset, 0, _this.w - (_this.offset * 2), _this.h);\n        setTimeout(function() {\n          _this.glitchImg(_this.context, _this.canvas);\n        }, _this.randInt(250, 1000));\n      };\n    })(this), 500);\n  };\n\n  GlitchFX.prototype.glitchImg = function(context, canvas) {\n    var a, b, i, spliceHeight, spliceWidth, x, y;\n    i = 0;\n    a = this.randInt(1, 13);\n    b = this.randInt(5, this.h / 3);\n    while (i < a) {\n      x = Math.random() * this.w;\n      y = Math.random() * this.h;\n      spliceWidth = this.w - x;\n      spliceHeight = b;\n      context.drawImage(canvas, 0, y, spliceWidth, spliceHeight, x, y, spliceWidth, spliceHeight);\n      context.drawImage(canvas, spliceWidth, y, x, spliceHeight, 0, y, x, spliceHeight);\n      i++;\n    }\n  };\n\n  GlitchFX.prototype.randInt = function(a, b) {\n    return ~~(Math.random() * (b - a) + a);\n  };\n\n  GlitchFX.prototype.clear = function() {\n    this.context.rect(0, 0, this.w, this.h);\n    this.context.fill();\n  };\n\n  return GlitchFX;\n\n})();\n\n\n\n\n/*\n* Inspired by:\n* http://designedbythomas.co.uk/blog/how-detect-width-web-browser-using-jquery\n*\n* This script is ideal for getting specific class depending on device width\n* for enhanced theming. Media queries are fine in most cases but sometimes\n* you want to target a specific JQuery call based on width. This will work\n* for that. Be sure to put it first in your script file. Note that you could\n* also target the body class instead of 'html' as well.\n* Modify as needed\n */\n(function($) {\n  $(document).ready(function() {\n    var current_width;\n    current_width = $(window).width();\n    if (current_width < 481) {\n      $('html').addClass('m320').removeClass('m768').removeClass('desktop').removeClass('m480');\n    } else if (current_width < 739) {\n      $('html').addClass('m768').removeClass('desktop').removeClass('m320').removeClass('tablet');\n    } else if (current_width < 970) {\n      $('html').addClass('tablet').removeClass('desktop').removeClass('m320').removeClass('m768');\n    } else if (current_width > 971) {\n      $('html').addClass('desktop').removeClass('m320').removeClass('m768').removeClass('tablet');\n    }\n    if (current_width < 650) {\n      $('html').addClass('mobile-menu').removeClass('desktop-menu');\n    }\n    if (current_width > 651) {\n      $('html').addClass('desktop-menu').removeClass('mobile-menu');\n    }\n  });\n  $(window).resize(function() {\n    var current_width;\n    current_width = $(window).width();\n    if (current_width < 481) {\n      $('html').addClass('m320').removeClass('m768').removeClass('desktop').removeClass('tablet');\n    } else if (current_width < 669) {\n      $('html').addClass('m768').removeClass('desktop').removeClass('m320').removeClass('tablet');\n    } else if (current_width < 970) {\n      $('html').addClass('tablet').removeClass('desktop').removeClass('m320').removeClass('m768');\n    } else if (current_width > 971) {\n      $('html').addClass('desktop').removeClass('m320').removeClass('m768').removeClass('tablet');\n    }\n    if (current_width < 650) {\n      $('html').addClass('mobile-menu').removeClass('desktop-menu');\n    }\n    if (current_width > 651) {\n      $('html').addClass('desktop-menu').removeClass('mobile-menu');\n    }\n  });\n})(jQuery);\n","## Dashboard Routes\r\nwindow._j49.config ( $stateProvider, $urlRouterProvider )->\r\n  $path = window.location.origin + window.location.pathname\r\n  $urlRouterProvider.otherwise '/'\r\n\r\n  $stateProvider\r\n    .state 'index',\r\n      url: '/'\r\n      controller: 'IndexController'\r\n      views:\r\n        'projects':\r\n          templateUrl: $path + '/views/index.html'\r\n          controller: 'ProjectController'\r\n\r\n  ## PROJECTS\r\n    .state 'project',\r\n      abstract: true\r\n      url: '/project'\r\n      controller: 'ProjectController'\r\n      template: '<ui-view class=\"projects index-projects animate\" />'\r\n\r\n    .state 'project.view',\r\n      parent: 'project'\r\n      url: '/:productId'\r\n      templateUrl: $path + '/views/project_view.html'\r\n      controller: ($scope, $stateParams)->\r\n        $scope.view $stateParams.productId\r\n\r\n        return\r\n\r\n\r\n\r\n  return\r\n\r\n","_j49.controller 'IndexController', ($scope, $state, $stateParams, $rootScope, $window, $log)->\r\n\r\n  _r = $window._route\r\n\r\n  $scope.checkingState = ->\r\n    $log.log 'Checking $state...', $state\r\n    $log.log 'Checking location...', $window.location\r\n    $log.log 'Checking $stateParams', $stateParams\r\n\r\n    return\r\n\r\n  $scope.goToProjects = ->\r\n\r\n\r\n\r\n  $scope.checkingState()\r\n\r\n  return","_j49.controller 'ProjectController', ($scope, $http, $window, $log, $state, $stateParams, $req, $helpers, localStorageService, $timeout, $rootScope)->\r\n\r\n  $scope.project = {}\r\n  $scope.projects = []\r\n  $scope.condition = {}\r\n  _r = $window._route\r\n  $scope.status = $helpers.getAllDefaultStatus()\r\n  $scope.getAllTimeout = null\r\n  $scope.getAllNextPageDelayTime = 2000\r\n\r\n  $scope.checking = ->\r\n    $log.info 'Checking $state', $state\r\n    $scope.switches($state.current)\r\n\r\n    return\r\n\r\n  $scope.switches = (currentState)->\r\n    switch currentState.name\r\n      when 'index'\r\n        $scope.gettingAll()\r\n\r\n        return\r\n\r\n      else\r\n        return\r\n\r\n    return\r\n\r\n  $scope.pushToProjects = (data)->\r\n    angular.forEach data, (val, key)->\r\n      $scope.projects.push val\r\n\r\n      return\r\n\r\n    return\r\n\r\n  $scope.get = (id)->\r\n    url = _r['project.show'].replace '{project}', id\r\n    $http.get url\r\n    .success (successData)->\r\n      $scope.project = successData\r\n      $log.log successData\r\n\r\n      return\r\n\r\n    return\r\n\r\n  $scope.gettingAll = ->\r\n    $scope.projects = []\r\n    $scope.status = $helpers.statusWhenGettingAll()\r\n    prjct = [\r\n      'project_page'\r\n      'project_paginate_done'\r\n      'project_paginate_interrupted'\r\n    ]\r\n    angular.forEach prjct, (v)->\r\n      localStorageService.remove v\r\n\r\n      return\r\n    $timeout ->\r\n      $scope.getAll 1\r\n      return\r\n\r\n    , 1500\r\n\r\n    return\r\n\r\n  $scope.getAll = (pageNumber)->\r\n    url = _r['project.index']\r\n    $rootScope.$broadcast 'projects:all',\r\n      page: pageNumber\r\n    $scope.status = $helpers.statusWhenGetAll()\r\n\r\n    $req._paginate pageNumber, url\r\n      .success (successData)->\r\n        $log.log 'ProjectController@getAll', successData\r\n        $rootScope.$broadcast 'projects:all:success'\r\n        $scope.status.error = false\r\n        localStorageService.set 'project_page', successData.success.data.current_page\r\n\r\n        if Boolean successData.success.data.next_page_url\r\n          if $state.is 'index'\r\n            $scope.getAllTimeout = $timeout ->\r\n              $scope.getAll successData.success.data.current_page + 1\r\n\r\n              return\r\n            , $scope.getAllNextPageDelayTime\r\n          else\r\n            localStorageService.set 'project_paginate_interrupted', true\r\n        else\r\n          $rootScope.$broadcast 'projects:all:complete'\r\n          $scope.status.loading = false\r\n          localStorageService.set 'project_paginate_done', true\r\n\r\n        return\r\n      .error (err)->\r\n        $log.error 'ProjectController@getAll::error', errorData\r\n        $rootScope.$broadcast 'projects:all:error'\r\n        $rootScope.$broadcast 'errorOccured'\r\n        $scope.status = $helpers.statusWhenError errorData.error.message\r\n\r\n        return\r\n      .then (thenData)->\r\n        $scope.pushToProjects thenData.data.success.data.data\r\n        $scope.status.loadingFirstTime = false\r\n\r\n        return\r\n\r\n    return\r\n\r\n  $scope.view = (productId)->\r\n    url = _r['project.show'].replace '{project}', productId\r\n    $http.get url\r\n      .success (successData)->\r\n        $log.log successData\r\n        $scope.project = successData.success.data\r\n\r\n        return\r\n      .error (err)->\r\n        $log.error errData\r\n\r\n        return\r\n\r\n    return\r\n\r\n  $scope.checking()\r\n\r\n  return","_j49.factory '$helpers', ($rootScope)->\r\n\r\n  _h = {}\r\n\r\n  _h.getAllDefaultStatus = ->\r\n    loading: false\r\n    error: false\r\n    errorMessage: null\r\n    loadingFirstTime: false\r\n\r\n  _h.getAllDefaultTimeout = ->\r\n    gettingAll: null\r\n    nextPage: 3000\r\n\r\n  _h.statusWhenGettingAll = ->\r\n    loadingFirstTime: true\r\n    error: false\r\n\r\n  _h.statusWhenGetAll = ->\r\n    loading: true\r\n    error: false\r\n\r\n  _h.statusWhenSuccess = ->\r\n    error: false\r\n\r\n  _h.statusWhenNoMoreNextPage = ->\r\n    loading: false\r\n\r\n  _h.statusWhenError = (errorMessage)->\r\n    error: true\r\n    loading: false\r\n    errorMessage: errorMessage\r\n\r\n  _h.statusWhenComplete = ->\r\n    loadingFirstTime: false\r\n\r\n  _h","_j49.factory '$req', ( $http )->\r\n\r\n  _r = {}\r\n\r\n  _r._paginate = ( pageNumber, url, method )->\r\n    if angular.isObject pageNumber\r\n      url        = pageNumber.url\r\n      pageNumber = pageNumber.page\r\n      method     = pageNumber.method\r\n\r\n    $http\r\n      url: url\r\n      method: if method then method else 'GET'\r\n      params:\r\n        page: pageNumber\r\n\r\n  _r._post = ( url, data, params, method )->\r\n    if angular.isObject url\r\n      url    = url.url\r\n      data   = url.data\r\n      params = url.params\r\n      method = url.method\r\n\r\n    $http\r\n      url: url\r\n      data: data\r\n      params: params\r\n      method: if method then method else 'POST'\r\n\r\n  _r._delete = ( url, data, params )->\r\n    if angular.isObject url\r\n      url    = url.url\r\n      data   = url.data\r\n      params = url.params\r\n\r\n    _r._post url, data, params, 'DELETE'\r\n\r\n  _r._patch = ( url, data, params )->\r\n    if angular.isObject url\r\n      url    = url.url\r\n      data   = url.data\r\n      params = url.params\r\n\r\n    _r._post url, data, params, 'PATCH'\r\n\r\n  _r._put = ( url, data, params )->\r\n    if angular.isObject url\r\n      url    = url.url\r\n      data   = url.data\r\n      params = url.params\r\n\r\n    _r.post url, data, params, 'PUT'\r\n\r\n  _r._get = ( url, params )->\r\n    if angular.isObject url\r\n      url    = url.url\r\n      params = url.params\r\n\r\n    $http\r\n      url: url\r\n      params: params\r\n      method: 'GET'\r\n\r\n  _r","class GlitchFX\r\n\r\n  'use strict'\r\n\r\n  @canvas\r\n  @context\r\n  @img\r\n  @offset = undefined\r\n  @w = undefined\r\n  @h = undefined\r\n  @glitchInterval = undefined\r\n\r\n  constructor: (id, src)->\r\n    id = if id then id else 'glitch_canvas'\r\n    src = if src then src else '/images/logo.png'\r\n    @img = new Image\r\n    @img.src = src\r\n    @canvas = document.getElementById id\r\n    @context = @canvas.getContext '2d'\r\n\r\n    @img.onload = =>\r\n      @glitching()\r\n\r\n      return\r\n\r\n    return\r\n\r\n  glitching: ->\r\n    @canvas.width = @w = $(window).width()\r\n    @offset = @w * .1\r\n    @canvas.height = @h = ~ ~(175 * (@w - (@offset * 2)) / @img.width)\r\n    $(window).resize =>\r\n      @canvas.width = @w = $(window).width()\r\n      @offset = @w * .1\r\n      @canvas.height = @h = ~ ~(175 * (@w - (@offset * 2)) / @img.width)\r\n\r\n      return\r\n\r\n    clearInterval @glitchInterval\r\n    @glitchInterval = setInterval =>\r\n      @clear()\r\n      @context.drawImage @img, 0, 110, @img.width, 175, @offset, 0, @w - (@offset * 2), @h\r\n      setTimeout =>\r\n        @glitchImg(@context, @canvas)\r\n\r\n        return\r\n      , @randInt(250, 1000)\r\n\r\n      return\r\n    , 500\r\n\r\n    return\r\n\r\n  glitchImg: (context, canvas)->\r\n    i = 0\r\n    a = @randInt(1, 13) # ~ ~(Math.random() * (13 - 1) + 1)\r\n    b = @randInt(5, @h / 3) #~ ~(Math.random() * (@h / 3 - 5) + 5)\r\n    while i < a\r\n      x = Math.random() * @w\r\n      y = Math.random() * @h\r\n      spliceWidth = @w - x\r\n      spliceHeight = b\r\n      context.drawImage canvas, 0, y, spliceWidth, spliceHeight, x, y, spliceWidth, spliceHeight\r\n      context.drawImage canvas, spliceWidth, y, x, spliceHeight, 0, y, x, spliceHeight\r\n      i++\r\n\r\n    return\r\n\r\n  randInt: (a, b) ->\r\n    ~ ~(Math.random() * (b - a) + a)\r\n\r\n  clear: ->\r\n    @context.rect 0, 0, @w, @h\r\n    @context.fill()\r\n\r\n    return\r\n\r\n","###\r\n* Inspired by:\r\n* http://designedbythomas.co.uk/blog/how-detect-width-web-browser-using-jquery\r\n*\r\n* This script is ideal for getting specific class depending on device width\r\n* for enhanced theming. Media queries are fine in most cases but sometimes\r\n* you want to target a specific JQuery call based on width. This will work\r\n* for that. Be sure to put it first in your script file. Note that you could\r\n* also target the body class instead of 'html' as well.\r\n* Modify as needed\r\n###\r\n\r\n(($) ->\r\n  $(document).ready ->\r\n    current_width = $(window).width()\r\n    #do something with the width value here!\r\n    if current_width < 481\r\n      $('html').addClass('m320').removeClass('m768').removeClass('desktop').removeClass 'm480'\r\n    else if current_width < 739\r\n      $('html').addClass('m768').removeClass('desktop').removeClass('m320').removeClass 'tablet'\r\n    else if current_width < 970\r\n      $('html').addClass('tablet').removeClass('desktop').removeClass('m320').removeClass 'm768'\r\n    else if current_width > 971\r\n      $('html').addClass('desktop').removeClass('m320').removeClass('m768').removeClass 'tablet'\r\n    if current_width < 650\r\n      $('html').addClass('mobile-menu').removeClass 'desktop-menu'\r\n    if current_width > 651\r\n      $('html').addClass('desktop-menu').removeClass 'mobile-menu'\r\n    return\r\n  #update the width value when the browser is resized (useful for devices which switch from portrait to landscape)\r\n  $(window).resize ->\r\n    current_width = $(window).width()\r\n    #do something with the width value here!\r\n    if current_width < 481\r\n      $('html').addClass('m320').removeClass('m768').removeClass('desktop').removeClass 'tablet'\r\n    else if current_width < 669\r\n      $('html').addClass('m768').removeClass('desktop').removeClass('m320').removeClass 'tablet'\r\n    else if current_width < 970\r\n      $('html').addClass('tablet').removeClass('desktop').removeClass('m320').removeClass 'm768'\r\n    else if current_width > 971\r\n      $('html').addClass('desktop').removeClass('m320').removeClass('m768').removeClass 'tablet'\r\n    if current_width < 650\r\n      $('html').addClass('mobile-menu').removeClass 'desktop-menu'\r\n    if current_width > 651\r\n      $('html').addClass('desktop-menu').removeClass 'mobile-menu'\r\n    return\r\n  return\r\n) jQuery\r\n\r\n# ---\r\n# generated by js2coffee 2.0.3\r\n"],"sourceRoot":"/source/"}