{"version":3,"sources":["app_glitchfx.coffee","app_glitchfx.js"],"names":["GlitchFX","id","src","this","img","Image","canvas","document","getElementById","context","getContext","onload","_this","glitching","offset","w","h","glitchInterval","prototype","width","$","window","height","resize","clearInterval","setInterval","clear","drawImage","setTimeout","glitchImg","randInt","a","b","i","spliceHeight","spliceWidth","x","y","Math","random","rect","fill"],"mappings":"AAAA,GAAAA,SAAMA,UAAA,WAEJ,YAUa,SAAAA,GAACC,EAAIC,GAChBD,EAAQA,EAAQA,EAAQ,gBACxBC,EAASA,EAASA,EAAS,mBAC3BC,KAACC,IAAM,GAAIC,OACXF,KAACC,IAAIF,IAAMA,EACXC,KAACG,OAASC,SAASC,eAAeP,GAClCE,KAACM,QAAUN,KAACG,OAAOI,WAAW,MAE9BP,KAACC,IAAIO,OAAS,SAAAC,GCMZ,MDNY,YACZA,EAACC,cADWV,MC6DhB,MD7EAH,GAACM,OACDN,EAACS,QACDT,EAACI,IACDJ,EAACc,OAAS,OACVd,EAACe,EAAI,OACLf,EAACgB,EAAI,OACLhB,EAACiB,eAAiB,OCuBlBjB,EAASkB,UDNTL,UAAW,WACTV,KAACG,OAAOa,MAAQhB,KAACY,EAAIK,EAAEC,QAAQF,QAC/BhB,KAACW,OAAc,GAALX,KAACY,EACXZ,KAACG,OAAOgB,OAASnB,KAACa,KAAQ,KAAOb,KAACY,EAAe,EAAVZ,KAACW,QAAeX,KAACC,IAAIe,OAC5DC,EAAEC,QAAQE,OAAO,SAAAX,GCOf,MDPe,YACfA,EAACN,OAAOa,MAAQP,EAACG,EAAIK,EAAEC,QAAQF,QAC/BP,EAACE,OAAc,GAALF,EAACG,EACXH,EAACN,OAAOgB,OAASV,EAACI,KAAQ,KAAOJ,EAACG,EAAe,EAAVH,EAACE,QAAeF,EAACR,IAAIe,SAH7ChB,OAOjBqB,cAAcrB,KAACc,gBACfd,KAACc,eAAiBQ,YAAY,SAAAb,GCO5B,MDP4B,YAC5BA,EAACc,QACDd,EAACH,QAAQkB,UAAUf,EAACR,IAAK,EAAG,IAAKQ,EAACR,IAAIe,MAAO,IAAKP,EAACE,OAAQ,EAAGF,EAACG,EAAe,EAAVH,EAACE,OAAaF,EAACI,GACnFY,WAAW,WACThB,EAACiB,UAAUjB,EAACH,QAASG,EAACN,SAGtBM,EAACkB,QAAQ,IAAK,QAPY3B,MAU5B,MCOJH,EAASkB,UDHTW,UAAW,SAACpB,EAASH,GACnB,GAAAyB,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAGA,KAHAJ,EAAI,EACJF,EAAI5B,KAAC2B,QAAQ,EAAG,IAChBE,EAAI7B,KAAC2B,QAAQ,EAAG3B,KAACa,EAAI,GACXe,EAAJE,GACJG,EAAIE,KAAKC,SAAWpC,KAACY,EACrBsB,EAAIC,KAAKC,SAAWpC,KAACa,EACrBmB,EAAchC,KAACY,EAAIqB,EACnBF,EAAeF,EACfvB,EAAQkB,UAAUrB,EAAQ,EAAG+B,EAAGF,EAAaD,EAAcE,EAAGC,EAAGF,EAAaD,GAC9EzB,EAAQkB,UAAUrB,EAAQ6B,EAAaE,EAAGD,EAAGF,EAAc,EAAGG,EAAGD,EAAGF,GACpED,KCQJjC,EAASkB,UDJTY,QAAS,SAACC,EAAGC,GCKX,SDJIM,KAAKC,UAAYP,EAAID,GAAKA,ICOhC/B,EAASkB,UDLTQ,MAAO,WACLvB,KAACM,QAAQ+B,KAAK,EAAG,EAAGrC,KAACY,EAAGZ,KAACa,GACzBb,KAACM,QAAQgC,QCQJzC","file":"app_glitchfx.min.js","sourcesContent":["class GlitchFX\r\n\r\n  'use strict'\r\n\r\n  @canvas\r\n  @context\r\n  @img\r\n  @offset = undefined\r\n  @w = undefined\r\n  @h = undefined\r\n  @glitchInterval = undefined\r\n\r\n  constructor: (id, src)->\r\n    id = if id then id else 'glitch_canvas'\r\n    src = if src then src else '/images/logo.png'\r\n    @img = new Image\r\n    @img.src = src\r\n    @canvas = document.getElementById id\r\n    @context = @canvas.getContext '2d'\r\n\r\n    @img.onload = =>\r\n      @glitching()\r\n\r\n      return\r\n\r\n    return\r\n\r\n  glitching: ->\r\n    @canvas.width = @w = $(window).width()\r\n    @offset = @w * .1\r\n    @canvas.height = @h = ~ ~(175 * (@w - (@offset * 2)) / @img.width)\r\n    $(window).resize =>\r\n      @canvas.width = @w = $(window).width()\r\n      @offset = @w * .1\r\n      @canvas.height = @h = ~ ~(175 * (@w - (@offset * 2)) / @img.width)\r\n\r\n      return\r\n\r\n    clearInterval @glitchInterval\r\n    @glitchInterval = setInterval =>\r\n      @clear()\r\n      @context.drawImage @img, 0, 110, @img.width, 175, @offset, 0, @w - (@offset * 2), @h\r\n      setTimeout =>\r\n        @glitchImg(@context, @canvas)\r\n\r\n        return\r\n      , @randInt(250, 1000)\r\n\r\n      return\r\n    , 500\r\n\r\n    return\r\n\r\n  glitchImg: (context, canvas)->\r\n    i = 0\r\n    a = @randInt(1, 13) # ~ ~(Math.random() * (13 - 1) + 1)\r\n    b = @randInt(5, @h / 3) #~ ~(Math.random() * (@h / 3 - 5) + 5)\r\n    while i < a\r\n      x = Math.random() * @w\r\n      y = Math.random() * @h\r\n      spliceWidth = @w - x\r\n      spliceHeight = b\r\n      context.drawImage canvas, 0, y, spliceWidth, spliceHeight, x, y, spliceWidth, spliceHeight\r\n      context.drawImage canvas, spliceWidth, y, x, spliceHeight, 0, y, x, spliceHeight\r\n      i++\r\n\r\n    return\r\n\r\n  randInt: (a, b) ->\r\n    ~ ~(Math.random() * (b - a) + a)\r\n\r\n  clear: ->\r\n    @context.rect 0, 0, @w, @h\r\n    @context.fill()\r\n\r\n    return\r\n\r\n","var GlitchFX;\n\nGlitchFX = (function() {\n  'use strict';\n  GlitchFX.canvas;\n\n  GlitchFX.context;\n\n  GlitchFX.img;\n\n  GlitchFX.offset = void 0;\n\n  GlitchFX.w = void 0;\n\n  GlitchFX.h = void 0;\n\n  GlitchFX.glitchInterval = void 0;\n\n  function GlitchFX(id, src) {\n    id = id ? id : 'glitch_canvas';\n    src = src ? src : '/images/logo.png';\n    this.img = new Image;\n    this.img.src = src;\n    this.canvas = document.getElementById(id);\n    this.context = this.canvas.getContext('2d');\n    this.img.onload = (function(_this) {\n      return function() {\n        _this.glitching();\n      };\n    })(this);\n    return;\n  }\n\n  GlitchFX.prototype.glitching = function() {\n    this.canvas.width = this.w = $(window).width();\n    this.offset = this.w * .1;\n    this.canvas.height = this.h = ~~(175 * (this.w - (this.offset * 2)) / this.img.width);\n    $(window).resize((function(_this) {\n      return function() {\n        _this.canvas.width = _this.w = $(window).width();\n        _this.offset = _this.w * .1;\n        _this.canvas.height = _this.h = ~~(175 * (_this.w - (_this.offset * 2)) / _this.img.width);\n      };\n    })(this));\n    clearInterval(this.glitchInterval);\n    this.glitchInterval = setInterval((function(_this) {\n      return function() {\n        _this.clear();\n        _this.context.drawImage(_this.img, 0, 110, _this.img.width, 175, _this.offset, 0, _this.w - (_this.offset * 2), _this.h);\n        setTimeout(function() {\n          _this.glitchImg(_this.context, _this.canvas);\n        }, _this.randInt(250, 1000));\n      };\n    })(this), 500);\n  };\n\n  GlitchFX.prototype.glitchImg = function(context, canvas) {\n    var a, b, i, spliceHeight, spliceWidth, x, y;\n    i = 0;\n    a = this.randInt(1, 13);\n    b = this.randInt(5, this.h / 3);\n    while (i < a) {\n      x = Math.random() * this.w;\n      y = Math.random() * this.h;\n      spliceWidth = this.w - x;\n      spliceHeight = b;\n      context.drawImage(canvas, 0, y, spliceWidth, spliceHeight, x, y, spliceWidth, spliceHeight);\n      context.drawImage(canvas, spliceWidth, y, x, spliceHeight, 0, y, x, spliceHeight);\n      i++;\n    }\n  };\n\n  GlitchFX.prototype.randInt = function(a, b) {\n    return ~~(Math.random() * (b - a) + a);\n  };\n\n  GlitchFX.prototype.clear = function() {\n    this.context.rect(0, 0, this.w, this.h);\n    this.context.fill();\n  };\n\n  return GlitchFX;\n\n})();\n"],"sourceRoot":"/source/"}