{"version":3,"sources":["app_controller_project.coffee"],"names":["_j49","controller","$scope","$http","$window","$log","$state","$stateParams","$req","$helpers","localStorageService","$timeout","$rootScope","_r","project","projects","condition","_route","status","getAllDefaultStatus","getAllTimeout","getAllNextPageDelayTime","checking","info","switches","current","currentState","name","gettingAll","pushToProjects","data","angular","forEach","val","key","push","get","id","url","replace","success","successData","log","prjct","statusWhenGettingAll","v","remove","getAll","pageNumber","$broadcast","page","statusWhenGetAll","_paginate","error","set","current_page","Boolean","next_page_url","is","loading","err","errorData","statusWhenError","message","then","thenData","loadingFirstTime","view","productId","errData"],"mappings":"AAAAA,KAAKC,WAAW,oBAAqB,SAACC,EAAQC,EAAOC,EAASC,EAAMC,EAAQC,EAAcC,EAAMC,EAAUC,EAAqBC,EAAUC,GAEvI,GAAAC,EAAAX,GAAOY,WACPZ,EAAOa,YACPb,EAAOc,aACPH,EAAKT,EAAQa,OACbf,EAAOgB,OAAST,EAASU,sBACzBjB,EAAOkB,cAAgB,KACvBlB,EAAOmB,wBAA0B,IAEjCnB,EAAOoB,SAAW,WAChBjB,EAAKkB,KAAK,kBAAmBjB,GAC7BJ,EAAOsB,SAASlB,EAAOmB,UAIzBvB,EAAOsB,SAAW,SAACE,GACjB,OAAOA,EAAaC,MAApB,IACO,QAGH,WAFAzB,GAAO0B,YAFX,SAOI,SAIN1B,EAAO2B,eAAiB,SAACC,GACvBC,QAAQC,QAAQF,EAAM,SAACG,EAAKC,GAC1BhC,EAAOa,SAASoB,KAAKF,MAMzB/B,EAAOkC,IAAM,SAACC,GACZ,GAAAC,EAAAA,GAAMzB,EAAG,gBAAgB0B,QAAQ,YAAaF,GAC9ClC,EAAMiC,IAAIE,GACTE,QAAQ,SAACC,GACRvC,EAAOY,QAAU2B,EACjBpC,EAAKqC,IAAID,MAMbvC,EAAO0B,WAAa,WAClB,GAAAe,EAAAzC,GAAOa,YACPb,EAAOgB,OAAST,EAASmC,uBACzBD,GACE,eACA,wBACA,gCAEFZ,QAAQC,QAAQW,EAAO,SAACE,GACtBnC,EAAoBoC,OAAOD,KAG7BlC,EAAS,WACPT,EAAO6C,OAAO,IAGd,OAIJ7C,EAAO6C,OAAS,SAACC,GACf,GAAAV,EAAAA,GAAMzB,EAAG,iBACTD,EAAWqC,WAAW,gBACpBC,KAAMF,IACR9C,EAAOgB,OAAST,EAAS0C,mBAEzB3C,EAAK4C,UAAUJ,EAAYV,GACxBE,QAAQ,SAACC,GACRpC,EAAKqC,IAAI,2BAA4BD,GACrC7B,EAAWqC,WAAW,wBACtB/C,EAAOgB,OAAOmC,OAAQ,EACtB3C,EAAoB4C,IAAI,eAAgBb,EAAYD,QAAQV,KAAKyB,cAE9DC,QAAQf,EAAYD,QAAQV,KAAK2B,eAC/BnD,EAAOoD,GAAG,SACXxD,EAAOkB,cAAgBT,EAAS,WAC9BT,EAAO6C,OAAON,EAAYD,QAAQV,KAAKyB,aAAe,IAGtDrD,EAAOmB,yBAETX,EAAoB4C,IAAI,gCAAgC,IAE1D1C,EAAWqC,WAAW,yBACtB/C,EAAOgB,OAAOyC,SAAU,EACxBjD,EAAoB4C,IAAI,yBAAyB,MAGpDD,MAAM,SAACO,GACNvD,EAAKgD,MAAM,kCAAmCQ,WAC9CjD,EAAWqC,WAAW,sBACtBrC,EAAWqC,WAAW,gBACtB/C,EAAOgB,OAAST,EAASqD,gBAAgBD,UAAUR,MAAMU,WAG1DC,KAAK,SAACC,GACL/D,EAAO2B,eAAeoC,EAASnC,KAAKU,QAAQV,KAAKA,MACjD5B,EAAOgB,OAAOgD,kBAAmB,KAMvChE,EAAOiE,KAAO,SAACC,GACb,GAAA9B,EAAAA,GAAMzB,EAAG,gBAAgB0B,QAAQ,YAAa6B,GAC9CjE,EAAMiC,IAAIE,GACPE,QAAQ,SAACC,GACRpC,EAAKqC,IAAID,GACTvC,EAAOY,QAAU2B,EAAYD,QAAQV,OAGtCuB,MAAM,SAACO,GACNvD,EAAKgD,MAAMgB,YAMjBnE,EAAOoB","file":"app_controller_project.min.js","sourcesContent":["_j49.controller 'ProjectController', ($scope, $http, $window, $log, $state, $stateParams, $req, $helpers, localStorageService, $timeout, $rootScope)->\r\n\r\n  $scope.project = {}\r\n  $scope.projects = []\r\n  $scope.condition = {}\r\n  _r = $window._route\r\n  $scope.status = $helpers.getAllDefaultStatus()\r\n  $scope.getAllTimeout = null\r\n  $scope.getAllNextPageDelayTime = 2000\r\n\r\n  $scope.checking = ->\r\n    $log.info 'Checking $state', $state\r\n    $scope.switches($state.current)\r\n\r\n    return\r\n\r\n  $scope.switches = (currentState)->\r\n    switch currentState.name\r\n      when 'index'\r\n        $scope.gettingAll()\r\n\r\n        return\r\n\r\n      else\r\n        return\r\n\r\n    return\r\n\r\n  $scope.pushToProjects = (data)->\r\n    angular.forEach data, (val, key)->\r\n      $scope.projects.push val\r\n\r\n      return\r\n\r\n    return\r\n\r\n  $scope.get = (id)->\r\n    url = _r['project.show'].replace '{project}', id\r\n    $http.get url\r\n    .success (successData)->\r\n      $scope.project = successData\r\n      $log.log successData\r\n\r\n      return\r\n\r\n    return\r\n\r\n  $scope.gettingAll = ->\r\n    $scope.projects = []\r\n    $scope.status = $helpers.statusWhenGettingAll()\r\n    prjct = [\r\n      'project_page'\r\n      'project_paginate_done'\r\n      'project_paginate_interrupted'\r\n    ]\r\n    angular.forEach prjct, (v)->\r\n      localStorageService.remove v\r\n\r\n      return\r\n    $timeout ->\r\n      $scope.getAll 1\r\n      return\r\n\r\n    , 1500\r\n\r\n    return\r\n\r\n  $scope.getAll = (pageNumber)->\r\n    url = _r['project.index']\r\n    $rootScope.$broadcast 'projects:all',\r\n      page: pageNumber\r\n    $scope.status = $helpers.statusWhenGetAll()\r\n\r\n    $req._paginate pageNumber, url\r\n      .success (successData)->\r\n        $log.log 'ProjectController@getAll', successData\r\n        $rootScope.$broadcast 'projects:all:success'\r\n        $scope.status.error = false\r\n        localStorageService.set 'project_page', successData.success.data.current_page\r\n\r\n        if Boolean successData.success.data.next_page_url\r\n          if $state.is 'index'\r\n            $scope.getAllTimeout = $timeout ->\r\n              $scope.getAll successData.success.data.current_page + 1\r\n\r\n              return\r\n            , $scope.getAllNextPageDelayTime\r\n          else\r\n            localStorageService.set 'project_paginate_interrupted', true\r\n        else\r\n          $rootScope.$broadcast 'projects:all:complete'\r\n          $scope.status.loading = false\r\n          localStorageService.set 'project_paginate_done', true\r\n\r\n        return\r\n      .error (err)->\r\n        $log.error 'ProjectController@getAll::error', errorData\r\n        $rootScope.$broadcast 'projects:all:error'\r\n        $rootScope.$broadcast 'errorOccured'\r\n        $scope.status = $helpers.statusWhenError errorData.error.message\r\n\r\n        return\r\n      .then (thenData)->\r\n        $scope.pushToProjects thenData.data.success.data.data\r\n        $scope.status.loadingFirstTime = false\r\n\r\n        return\r\n\r\n    return\r\n\r\n  $scope.view = (productId)->\r\n    url = _r['project.show'].replace '{project}', productId\r\n    $http.get url\r\n      .success (successData)->\r\n        $log.log successData\r\n        $scope.project = successData.success.data\r\n\r\n        return\r\n      .error (err)->\r\n        $log.error errData\r\n\r\n        return\r\n\r\n    return\r\n\r\n  $scope.checking()\r\n\r\n  return"],"sourceRoot":"/source/"}