{"version":3,"sources":["preload.coffee","preload.js"],"names":["window","_j49","angular","module","config","$interpolateProvider","$animateProvider","$httpProvider","LightboxProvider","localStorageServiceProvider","cfpLoadingBarProvider","startSymbol","endSymbol","getImageUrl","image","sizes","url","getImageCaption","caption","calculateModalDimensions","dimensions","width","Math","max","imageDisplayWidth","windowWidth","height","templateUrl","setPrefix","classNameFilter","defaults","headers","common","includeSpinner","run","$rootScope","$state","$stateParams","$log","$timeout","$on","$","addClass","loading","debug","removeClass","started","completed","element","document","ready","bootstrap","_glitch","GlitchFX","tooltip","container","popover"],"mappings":"AAAAA,OAAOC,KAAOC,QAAQC,OAAO,OAC3B,eACA,YACA,YACA,oBACA,qBACA,aACA,oBACA,eAGFH,OAAOC,KAAKG,OAAO,SAACC,EAAsBC,EAAkBC,EAAeC,EAAkBC,EAA6BC,GAExHL,EAAqBM,YAAY,MACjCN,EAAqBO,UAAU,MAE/BJ,EAAiBK,YAAc,SAAEC,GCV/B,MDWAA,GAAMC,MAAM,GAAGC,KAEjBR,EAAiBS,gBAAkB,SAAEH,GCVnC,MDWAA,GAAMI,SAERV,EAAiBW,yBAA2B,SAAEC,GAC5C,GAAAC,ECNA,ODMAA,GAAQC,KAAKC,IAAI,IAAKH,EAAWI,kBAAoB,IAElDH,GAASD,EAAWK,YAAc,IAAML,EAAWK,YAAc,OAChEJ,EAAQ,SAERA,MAASA,EACTK,OAAU,SAGhBlB,EAAiBmB,YAAc,sBAE/BlB,EAA4BmB,UAAW,OAEvCtB,EAAiBuB,gBAAgB,oBAEjCtB,EAAcuB,SAASC,QAAQC,OAAO,oBAAsB,iBAE5DtB,EAAsBuB,gBAAiB,IAIzCjC,OAAOC,KAAKiC,IAAI,SAACC,EAAYC,EAAQC,EAAcC,EAAMC,GAEvDJ,EAAWC,OAASA,EACpBD,EAAWE,aAAeA,EAE1BF,EAAWK,IAAI,eAAgB,WAC7BC,EAAE,QAAQC,SAAS,mBAIrBP,EAAWK,IAAI,wBAAyB,SAACG,GACvCL,EAAKM,MAAM,wBAAyBD,GACpCF,EAAE,QAAQI,YAAY,mBAIxBV,EAAWK,IAAI,wBAAyB,SAACM,GACvCR,EAAKM,MAAM,wBAAyBE,GACpCL,EAAE,QAAQI,YAAY,mBAIxBV,EAAWK,IAAI,0BAA2B,SAACO,GACzCT,EAAKM,MAAM,0BAA2BG,OAO1C7C,QAAQ8C,QAAQC,UAAUC,MAAM,WAC9BhD,QAAQiD,UAAUF,UAAW,QAE7BjD,OAAOoD,QAAc,GAAAC,UAAS,gBAAiB,oBAE/CZ,EAAG,2BAA4Ba,SAC7BC,UAAW,SAGbd,EAAG,2BAA4Be","file":"preload.min.js","sourcesContent":["window._j49 = angular.module 'J46', [\r\n  'ui.bootstrap'\r\n  'ngAnimate'\r\n  'ui.router'\r\n  'bootstrapLightbox'\r\n  'LocalStorageModule'\r\n  'ngMessages'\r\n  'uiGmapgoogle-maps'\r\n  'wu.masonry'\r\n  ]\r\n\r\nwindow._j49.config ($interpolateProvider, $animateProvider, $httpProvider, LightboxProvider, localStorageServiceProvider, cfpLoadingBarProvider)->\r\n\r\n  $interpolateProvider.startSymbol '{#'\r\n  $interpolateProvider.endSymbol '#}'\r\n\r\n  LightboxProvider.getImageUrl = ( image )->\r\n    image.sizes[0].url\r\n\r\n  LightboxProvider.getImageCaption = ( image )->\r\n    image.caption\r\n\r\n  LightboxProvider.calculateModalDimensions = ( dimensions )->\r\n    width = Math.max 400, dimensions.imageDisplayWidth - 8\r\n\r\n    if width >= dimensions.windowWidth - 20 or dimensions.windowWidth < 768\r\n        width = 'auto'\r\n    {\r\n        'width': width\r\n        'height': 'auto'\r\n    }\r\n\r\n  LightboxProvider.templateUrl = 'views/lightbox.html'\r\n\r\n  localStorageServiceProvider.setPrefix( 'jag' )\r\n\r\n  $animateProvider.classNameFilter /carousel|animate/\r\n\r\n  $httpProvider.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\"\r\n\r\n  cfpLoadingBarProvider.includeSpinner = false\r\n\r\n  return\r\n\r\nwindow._j49.run ($rootScope, $state, $stateParams, $log, $timeout)->\r\n\r\n  $rootScope.$state = $state\r\n  $rootScope.$stateParams = $stateParams\r\n\r\n  $rootScope.$on 'errorOccured', ->\r\n    $('body').addClass 'error-occured'\r\n\r\n    return\r\n\r\n  $rootScope.$on 'cfpLoadingBar:loading', (loading)->\r\n    $log.debug 'cfpLoadingBar:loading', loading\r\n    $('body').removeClass 'error-occured'\r\n\r\n    return\r\n\r\n  $rootScope.$on 'cfpLoadingBar:started', (started)->\r\n    $log.debug 'cfpLoadingBar:started', started\r\n    $('body').removeClass 'error-occured'\r\n\r\n    return\r\n\r\n  $rootScope.$on 'cfpLoadingBar:completed', (completed)->\r\n    $log.debug 'cfpLoadingBar:completed', completed\r\n\r\n    return\r\n\r\n\r\n  return\r\n\r\nangular.element(document).ready ->\r\n  angular.bootstrap(document, ['J46'])\r\n\r\n  window._glitch = new GlitchFX('glitch_canvas', '/images/logo.png')\r\n\r\n  $( '[data-toggle=\"tooltip\"]' ).tooltip(\r\n    container: 'body'\r\n  )\r\n\r\n  $( '[data-toggle=\"popover\"]' ).popover()\r\n\r\n  return","window._j49 = angular.module('J46', ['ui.bootstrap', 'ngAnimate', 'ui.router', 'bootstrapLightbox', 'LocalStorageModule', 'ngMessages', 'uiGmapgoogle-maps', 'wu.masonry']);\n\nwindow._j49.config(function($interpolateProvider, $animateProvider, $httpProvider, LightboxProvider, localStorageServiceProvider, cfpLoadingBarProvider) {\n  $interpolateProvider.startSymbol('{#');\n  $interpolateProvider.endSymbol('#}');\n  LightboxProvider.getImageUrl = function(image) {\n    return image.sizes[0].url;\n  };\n  LightboxProvider.getImageCaption = function(image) {\n    return image.caption;\n  };\n  LightboxProvider.calculateModalDimensions = function(dimensions) {\n    var width;\n    width = Math.max(400, dimensions.imageDisplayWidth - 8);\n    if (width >= dimensions.windowWidth - 20 || dimensions.windowWidth < 768) {\n      width = 'auto';\n    }\n    return {\n      'width': width,\n      'height': 'auto'\n    };\n  };\n  LightboxProvider.templateUrl = 'views/lightbox.html';\n  localStorageServiceProvider.setPrefix('jag');\n  $animateProvider.classNameFilter(/carousel|animate/);\n  $httpProvider.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\n  cfpLoadingBarProvider.includeSpinner = false;\n});\n\nwindow._j49.run(function($rootScope, $state, $stateParams, $log, $timeout) {\n  $rootScope.$state = $state;\n  $rootScope.$stateParams = $stateParams;\n  $rootScope.$on('errorOccured', function() {\n    $('body').addClass('error-occured');\n  });\n  $rootScope.$on('cfpLoadingBar:loading', function(loading) {\n    $log.debug('cfpLoadingBar:loading', loading);\n    $('body').removeClass('error-occured');\n  });\n  $rootScope.$on('cfpLoadingBar:started', function(started) {\n    $log.debug('cfpLoadingBar:started', started);\n    $('body').removeClass('error-occured');\n  });\n  $rootScope.$on('cfpLoadingBar:completed', function(completed) {\n    $log.debug('cfpLoadingBar:completed', completed);\n  });\n});\n\nangular.element(document).ready(function() {\n  angular.bootstrap(document, ['J46']);\n  window._glitch = new GlitchFX('glitch_canvas', '/images/logo.png');\n  $('[data-toggle=\"tooltip\"]').tooltip({\n    container: 'body'\n  });\n  $('[data-toggle=\"popover\"]').popover();\n});\n"],"sourceRoot":"/source/"}